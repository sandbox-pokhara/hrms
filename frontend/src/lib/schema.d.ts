/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/csrf/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Get Csrf Token */
        post: operations["core_api_get_csrf_token"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/projects/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Projects */
        get: operations["core_api_list_projects"];
        put?: never;
        /** Create Project */
        post: operations["core_api_create_project"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/activities/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Activities */
        get: operations["core_api_list_activities"];
        put?: never;
        /** Create Activity */
        post: operations["core_api_create_activity"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/current/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Current User */
        get: operations["core_api_current_user"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Users */
        get: operations["core_api_list_users"];
        put?: never;
        /** Create User */
        post: operations["core_api_create_user"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/change-password/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Change Password */
        post: operations["core_api_change_password"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/time-logs/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Time Logs */
        get: operations["core_api_list_time_logs"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/time-logs/current/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Current Time Log */
        get: operations["core_api_current_time_log"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/time-logs/start/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Start Time Log */
        post: operations["core_api_start_time_log"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/time-logs/end/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** End Time Log */
        post: operations["core_api_end_time_log"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/time-logs/users/end/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** End Users Time Log */
        post: operations["core_api_end_users_time_log"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/time-logs/summary/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Time Log Summary */
        get: operations["core_api_time_log_summary"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/time-logs/edit/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Update Time Logs */
        post: operations["core_api_update_time_logs"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/time-logs/delete/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Delete Time Logs */
        post: operations["core_api_delete_time_logs"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/absence-balances/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Absence Balances */
        get: operations["core_api_list_absence_balances"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/absence-balances/remaining/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Remaining Absences */
        get: operations["core_api_remaining_absences"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/absence-balances/submit/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Submit Absence */
        post: operations["core_api_submit_absence"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/login/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth Login */
        post: operations["core_api_auth_login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/logout/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Auth Logout */
        post: operations["core_api_auth_logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/holidays/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Holidays */
        get: operations["core_api_list_holidays"];
        put?: never;
        /** Create Holiday */
        post: operations["core_api_create_holiday"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/holidays/import/available-countries/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Available Countries */
        get: operations["core_api_available_countries"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/holidays/import/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Import Holidays */
        post: operations["core_api_import_holidays"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/working-hours-summary/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Working Hours Summary */
        get: operations["core_api_working_hours_summary"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Input */
        Input: {
            /**
             * Limit
             * @default 100
             */
            limit: number;
            /**
             * Offset
             * @default 0
             */
            offset: number;
        };
        /** PagedProjectDTO */
        PagedProjectDTO: {
            /** Items */
            items: components["schemas"]["ProjectDTO"][];
            /** Count */
            count: number;
        };
        /** ProjectDTO */
        ProjectDTO: {
            /** ID */
            id?: number | null;
            /**
             * Date Created
             * Format: date-time
             */
            date_created: string;
            /**
             * Date Modified
             * Format: date-time
             */
            date_modified: string;
            /** Name */
            name: string;
        };
        /** GenericDTO */
        GenericDTO: {
            /** Detail */
            detail: string;
        };
        /** CreateProject */
        CreateProject: {
            /** Project */
            project: string;
        };
        /** ActivityDTO */
        ActivityDTO: {
            /** ID */
            id?: number | null;
            /**
             * Date Created
             * Format: date-time
             */
            date_created: string;
            /**
             * Date Modified
             * Format: date-time
             */
            date_modified: string;
            /** Name */
            name: string;
        };
        /** PagedActivityDTO */
        PagedActivityDTO: {
            /** Items */
            items: components["schemas"]["ActivityDTO"][];
            /** Count */
            count: number;
        };
        /** CreateActivity */
        CreateActivity: {
            /** Activity */
            activity: string;
        };
        /** UserDTO */
        UserDTO: {
            /** ID */
            id?: number | null;
            /** Last Login */
            last_login?: string | null;
            /**
             * Superuser Status
             * @description Designates that this user has all permissions without explicitly assigning them.
             * @default false
             */
            is_superuser: boolean;
            /**
             * Username
             * @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
             */
            username: string;
            /** First Name */
            first_name?: string | null;
            /** Last Name */
            last_name?: string | null;
            /** Email Address */
            email?: string | null;
            /**
             * Staff Status
             * @description Designates whether the user can log into this admin site.
             * @default false
             */
            is_staff: boolean;
            /**
             * Active
             * @description Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
             * @default true
             */
            is_active: boolean;
            /**
             * Date Joined
             * Format: date-time
             */
            date_joined?: string;
            /**
             * Expected Hours Sun
             * @default 0
             */
            expected_hours_sun: number;
            /**
             * Expected Hours Mon
             * @default 0
             */
            expected_hours_mon: number;
            /**
             * Expected Hours Tue
             * @default 0
             */
            expected_hours_tue: number;
            /**
             * Expected Hours Wed
             * @default 0
             */
            expected_hours_wed: number;
            /**
             * Expected Hours Thu
             * @default 0
             */
            expected_hours_thu: number;
            /**
             * Expected Hours Fri
             * @default 0
             */
            expected_hours_fri: number;
            /**
             * Expected Hours Sat
             * @default 0
             */
            expected_hours_sat: number;
            /**
             * Groups
             * @description The groups this user belongs to. A user will get all permissions granted to each of their groups.
             */
            groups: number[];
            /**
             * User Permissions
             * @description Specific permissions for this user.
             */
            user_permissions: number[];
        };
        /** CreateUser */
        CreateUser: {
            /** Username */
            username: string;
            /** Password */
            password: string;
        };
        /** PagedUserListDTO */
        PagedUserListDTO: {
            /** Items */
            items: components["schemas"]["UserListDTO"][];
            /** Count */
            count: number;
        };
        /** UserListDTO */
        UserListDTO: {
            /** Absence Balance */
            absence_balance: number;
            /** ID */
            id?: number | null;
            /** Last Login */
            last_login?: string | null;
            /**
             * Superuser Status
             * @description Designates that this user has all permissions without explicitly assigning them.
             * @default false
             */
            is_superuser: boolean;
            /**
             * Username
             * @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
             */
            username: string;
            /** First Name */
            first_name?: string | null;
            /** Last Name */
            last_name?: string | null;
            /** Email Address */
            email?: string | null;
            /**
             * Staff Status
             * @description Designates whether the user can log into this admin site.
             * @default false
             */
            is_staff: boolean;
            /**
             * Active
             * @description Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
             * @default true
             */
            is_active: boolean;
            /**
             * Date Joined
             * Format: date-time
             */
            date_joined?: string;
            /**
             * Expected Hours Sun
             * @default 0
             */
            expected_hours_sun: number;
            /**
             * Expected Hours Mon
             * @default 0
             */
            expected_hours_mon: number;
            /**
             * Expected Hours Tue
             * @default 0
             */
            expected_hours_tue: number;
            /**
             * Expected Hours Wed
             * @default 0
             */
            expected_hours_wed: number;
            /**
             * Expected Hours Thu
             * @default 0
             */
            expected_hours_thu: number;
            /**
             * Expected Hours Fri
             * @default 0
             */
            expected_hours_fri: number;
            /**
             * Expected Hours Sat
             * @default 0
             */
            expected_hours_sat: number;
        };
        /** ChangePassword */
        ChangePassword: {
            /** Current Password */
            current_password: string;
            /** New Password */
            new_password: string;
        };
        /** PagedTimeLogDTO */
        PagedTimeLogDTO: {
            /** Items */
            items: components["schemas"]["TimeLogDTO"][];
            /** Count */
            count: number;
        };
        /** TimeLogDTO */
        TimeLogDTO: {
            /** Project  Name */
            project__name: string;
            /** Activity  Name */
            activity__name: string;
            /** User  Username */
            user__username: string;
            /** ID */
            id?: number | null;
            /**
             * Date Created
             * Format: date-time
             */
            date_created: string;
            /**
             * Date Modified
             * Format: date-time
             */
            date_modified: string;
            /** User */
            user: number;
            /**
             * Start
             * Format: date-time
             */
            start: string;
            /** End */
            end?: string | null;
            /**
             * Date
             * Format: date
             */
            date: string;
            /** Project */
            project: number;
            /** Activity */
            activity: number;
        };
        /** StartTimeLog */
        StartTimeLog: {
            /** Project */
            project: number;
            /** Activity */
            activity: number;
            /** Date */
            date: string;
        };
        /** EndSessionUserIds */
        EndSessionUserIds: {
            /** User Ids */
            user_ids: number[];
        };
        /** TimeLogSummaryDTO */
        TimeLogSummaryDTO: {
            /** User */
            user: string;
            /** Summary */
            summary: components["schemas"]["TimeLogSummaryPerDay"][];
        };
        /** TimeLogSummaryPerDay */
        TimeLogSummaryPerDay: {
            /**
             * Date
             * Format: date
             */
            date: string;
            /** Expected Hours */
            expected_hours: number;
            /** Hours Worked */
            hours_worked: number;
            /** Weekday */
            weekday: string;
            /** Holiday */
            holiday: string;
            /** Absence */
            absence: string;
        };
        /** EditTimeLogs */
        EditTimeLogs: {
            /** Time Log Ids */
            time_log_ids: number[];
            /** Activity Id */
            activity_id?: number | null;
            /** Project Id */
            project_id?: number | null;
            /** Start Time */
            start_time?: string | null;
            /** End Time */
            end_time?: string | null;
        };
        /** TimeLogIds */
        TimeLogIds: {
            /** Time Log Ids */
            time_log_ids: number[];
        };
        /** AbsenceBalanceDTO */
        AbsenceBalanceDTO: {
            /** User  Username */
            user__username: string;
            /** Created By  Username */
            created_by__username: string;
            /** ID */
            id?: number | null;
            /**
             * Date Created
             * Format: date-time
             */
            date_created: string;
            /**
             * Date Modified
             * Format: date-time
             */
            date_modified: string;
            /** User */
            user: number;
            /**
             * Date
             * Format: date
             */
            date: string;
            /** Description */
            description: string;
            /** Delta */
            delta: number;
            /** Created By */
            created_by: number;
        };
        /** PagedAbsenceBalanceDTO */
        PagedAbsenceBalanceDTO: {
            /** Items */
            items: components["schemas"]["AbsenceBalanceDTO"][];
            /** Count */
            count: number;
        };
        /** RemainingAbsences */
        RemainingAbsences: {
            /** Value */
            value: number;
        };
        /** SubmitAbsence */
        SubmitAbsence: {
            /** Description */
            description: string;
            /**
             * Start
             * Format: date
             */
            start: string;
            /**
             * End
             * Format: date
             */
            end: string;
        };
        /** Login */
        Login: {
            /** Username */
            username: string;
            /** Password */
            password: string;
        };
        /** HolidayDTO */
        HolidayDTO: {
            /** ID */
            id?: number | null;
            /**
             * Date Created
             * Format: date-time
             */
            date_created: string;
            /**
             * Date Modified
             * Format: date-time
             */
            date_modified: string;
            /** Name */
            name: string;
            /**
             * Date
             * Format: date
             */
            date: string;
        };
        /** PagedHolidayDTO */
        PagedHolidayDTO: {
            /** Items */
            items: components["schemas"]["HolidayDTO"][];
            /** Count */
            count: number;
        };
        /** AddHoliday */
        AddHoliday: {
            /** Name */
            name: string;
            /**
             * Date
             * Format: date
             */
            date: string;
        };
        /** AvailableCountries */
        AvailableCountries: {
            /** Country Code */
            country_code: string;
            /** Name */
            name: string;
        };
        /** ImportHolidays */
        ImportHolidays: {
            /** Year */
            year: number;
            /** Country Code */
            country_code: string;
        };
        /** WorkingHoursGraph */
        WorkingHoursGraph: {
            /**
             * Date
             * Format: date
             */
            date: string;
            /** Hours Worked */
            hours_worked: number;
        };
        /** WorkingHoursSummary */
        WorkingHoursSummary: {
            /** Working Hours Today */
            working_hours_today: number;
            /** Working Hours This Week */
            working_hours_this_week: number;
            /** Working Hours This Month */
            working_hours_this_month: number;
            /** Working Hours This Year */
            working_hours_this_year: number;
            /** Working Hours Graph */
            working_hours_graph: components["schemas"]["WorkingHoursGraph"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    core_api_get_csrf_token: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    core_api_list_projects: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedProjectDTO"];
                };
            };
        };
    };
    core_api_create_project: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateProject"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_list_activities: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedActivityDTO"];
                };
            };
        };
    };
    core_api_create_activity: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateActivity"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_current_user: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserDTO"];
                };
            };
        };
    };
    core_api_list_users: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedUserListDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_create_user: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateUser"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_change_password: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ChangePassword"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_list_time_logs: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedTimeLogDTO"];
                };
            };
        };
    };
    core_api_current_time_log: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TimeLogDTO"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_start_time_log: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["StartTimeLog"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TimeLogDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_end_time_log: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_end_users_time_log: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EndSessionUserIds"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_time_log_summary: {
        parameters: {
            query: {
                start: string;
                end: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TimeLogSummaryDTO"][];
                };
            };
        };
    };
    core_api_update_time_logs: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EditTimeLogs"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_delete_time_logs: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TimeLogIds"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_list_absence_balances: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedAbsenceBalanceDTO"];
                };
            };
        };
    };
    core_api_remaining_absences: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["RemainingAbsences"];
                };
            };
        };
    };
    core_api_submit_absence: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SubmitAbsence"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_auth_login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Login"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_auth_logout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_list_holidays: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PagedHolidayDTO"];
                };
            };
        };
    };
    core_api_create_holiday: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AddHoliday"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_available_countries: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AvailableCountries"][];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_import_holidays: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ImportHolidays"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HolidayDTO"][];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
    core_api_working_hours_summary: {
        parameters: {
            query: {
                start_date: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WorkingHoursSummary"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GenericDTO"];
                };
            };
        };
    };
}
